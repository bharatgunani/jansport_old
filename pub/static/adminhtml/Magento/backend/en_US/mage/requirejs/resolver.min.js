(function(factory){'use strict';if(require&&define&&define.amd){factory(require);}}(function(require){'use strict';var context=require.s.contexts._,completeLoad=context.completeLoad,registry=context.registry,resolver,listeners;listeners={};function trigger(){var namespace,handlers,hi,hl;for(namespace in listeners){handlers=listeners[namespace];hl=handlers.length;for(hi=0;hi<hl;hi++){handlers[hi]();}
handlers.splice(0,hl);}}
resolver={isResolved:function(){var keys=Object.keys(registry);return!keys.length||keys.every(function(key){return!registry[key].depCount;});},on:function(namespace,callback){var handlers;if(arguments.length===1&&typeof namespace==='function'){callback=namespace;namespace='_default';}
if(this.isResolved()){callback();}else{handlers=listeners[namespace]=listeners[namespace]||[];handlers.push(callback);}
return resolver;},hasListeners:function(namespace){var handlers;if(typeof namespace==='undefined'){namespace='_default';}
handlers=listeners[namespace];return handlers&&handlers.length;}};context.completeLoad=function(){completeLoad.apply(context,arguments);if(resolver.isResolved()){trigger();}};require.resolver=resolver;}));