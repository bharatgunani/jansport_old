define('mixins',['module'],function(module){'use strict';function hasPlugin(name){return!!~name.indexOf('!');}
function addPlugin(name){return'mixins!'+name;}
function removeBaseUrl(url,config){var baseUrl=config.baseUrl||'',index=url.indexOf(baseUrl);if(~index){url=url.substring(baseUrl.length-index);}
return url;}
function getPath(name,config){var url=require.toUrl(name);return removeBaseUrl(url,config);}
function isRelative(name){return!!~name.indexOf('./');}
function applyMixins(target){var mixins=Array.prototype.slice.call(arguments,1);mixins.forEach(function(mixin){target=mixin(target);});return target;}
return{load:function(name,req,onLoad,config){var path=getPath(name,config),mixins=this.getMixins(path),deps=[name].concat(mixins);req(deps,function(){onLoad(applyMixins.apply(null,arguments));});},getMixins:function(path){var config=module.config()||{},mixins=config[path]||{},result=[],mixin;for(mixin in mixins){if(mixins.hasOwnProperty(mixin)&&mixins[mixin]!==false){result.push(mixin);}}
return result;},hasMixins:function(path){return this.getMixins(path).length;},processNames:function(names,context){var config=context.config,index=names.length,path,name;while(index--){name=names[index];path=getPath(name,config);if(!hasPlugin(name)&&(isRelative(name)||this.hasMixins(path))){names[index]=addPlugin(name);}}}};});require(['mixins'],function(mixins){'use strict';var origRequire=window.require,originalDefine=window.define,commentRegExp=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,cjsRequireRegExp=/[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,contexts=origRequire.s.contexts,defContextName='_',hasOwn=Object.prototype.hasOwnProperty,key;function getOwn(obj,prop){return hasOwn.call(obj,prop)&&obj[prop];}
window.require=function(deps,callback,errback,optional){var context,config,contextName=defContextName;if(!Array.isArray(deps)&&typeof deps!=='string'){config=deps;if(Array.isArray(callback)){deps=callback;callback=errback;errback=optional;}else{deps=[];}}
if(config&&config.context){contextName=config.context;}
context=getOwn(contexts,contextName);if(!context){context=contexts[contextName]=require.s.newContext(contextName);}
if(config){context.configure(config);}
mixins.processNames(deps,context);return context.require(deps,callback,errback);};window.define=function(name,deps,callback){var context=getOwn(contexts,defContextName),args;if(typeof name!=='string'){callback=deps;deps=name;name=null;}
if(!Array.isArray(deps)){callback=deps;deps=null;}
if(!deps&&typeof callback==='function'){deps=[];if(callback.length){callback.toString().replace(commentRegExp,'').replace(cjsRequireRegExp,function(match,dep){deps.push(dep);});deps=(callback.length===1?['require']:['require','exports','module']).concat(deps);}}
if(Array.isArray(deps)){mixins.processNames(deps,context);}
args=[name,deps,callback];if(!name){args.shift(0);}
originalDefine.apply(null,args);};for(key in origRequire){if(origRequire.hasOwnProperty(key)){require[key]=origRequire[key];}}
for(key in originalDefine){if(originalDefine.hasOwnProperty(key)){define[key]=originalDefine[key];}}
window.requirejs=window.require;});