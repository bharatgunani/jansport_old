define(['mageUtils','underscore','./storage','./events'],function(utils,_,Storage,Events){'use strict';function async(name,registry,method){var args=_.toArray(arguments).slice(3);if(_.isString(method)){registry.get(name,function(component){component[method].apply(component,args);});}else if(_.isFunction(method)){registry.get(name,method);}else if(!args.length){return registry.get(name);}}
function Registry(){this.storage=new Storage();this.events=new Events(this.storage);}
Registry.prototype={constructor:Registry,get:function(elems,callback){var records;elems=utils.stringToArray(elems)||[];if(typeof callback!=='undefined'){this.events.wait(elems,callback);}else{records=this.storage.get(elems);return elems.length>1?records:records[0];}},set:function(elem,value){this.storage.set(elem,value);this.events.resolve(elem);return this;},remove:function(elems){elems=utils.stringToArray(elems);this.storage.remove(elems);return this;},has:function(elems){elems=utils.stringToArray(elems);return this.storage.has(elems);},async:function(name){return async.bind(null,name,this);},create:function(){return new Registry;}};return new Registry;});